# Mediconnect Production Environment Variables Template
# Copy this file to configure your Vercel deployment

# =============================================================================
# DATABASE (REQUIRED)
# =============================================================================
# Your Neon PostgreSQL connection string
# Format: postgresql://USER:PASSWORD@HOST/DATABASE?sslmode=require
DATABASE_URL=postgresql://neondb_owner:YOUR_PASSWORD@ep-winter-rice-a9mkk7ue-pooler.gwc.azure.neon.tech/neondb?sslmode=require&channel_binding=require

# =============================================================================
# AUTHENTICATION (REQUIRED)
# =============================================================================
# Generate a random 32+ character secret for Better Auth
# PowerShell: -join ((48..57) + (65..90) + (97..122) | Get-Random -Count 32 | ForEach-Object {[char]$_})
# Bash: openssl rand -base64 32
BETTER_AUTH_SECRET=your-random-secret-here-min-32-chars

# Your production URL (update after deployment)
BETTER_AUTH_URL=https://your-app.vercel.app
NEXT_PUBLIC_APP_URL=https://your-app.vercel.app

# Trusted origins for auth (comma-separated)
BETTER_AUTH_TRUSTED_ORIGINS=https://your-app.vercel.app

# =============================================================================
# EMAIL (OPTIONAL - for email verification & notifications)
# =============================================================================
# Email service configuration (SendGrid recommended)
EMAIL_FROM=noreply@yourdomain.com
EMAIL_PROVIDER=sendgrid
SENDGRID_API_KEY=your-sendgrid-api-key

# Alternative: SMTP
# EMAIL_PROVIDER=smtp
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# =============================================================================
# FILE UPLOADS (OPTIONAL)
# =============================================================================
# Cloudinary for medical documents/images
CLOUDINARY_CLOUD_NAME=your-cloud-name
CLOUDINARY_API_KEY=your-api-key
CLOUDINARY_API_SECRET=your-api-secret

# =============================================================================
# RATE LIMITING (REQUIRED FOR PRODUCTION)
# =============================================================================
# Redis for distributed rate limiting (Vercel KV or Upstash)
# Without Redis, in-memory rate limiting won't work across serverless functions
REDIS_URL=redis://default:your-password@your-redis-host:6379
# OR for Upstash
UPSTASH_REDIS_REST_URL=https://your-redis.upstash.io
UPSTASH_REDIS_REST_TOKEN=your-token

# =============================================================================
# MONITORING (RECOMMENDED)
# =============================================================================
# Sentry for error tracking
NEXT_PUBLIC_SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =============================================================================
# SECURITY (PRODUCTION)
# =============================================================================
# Node environment (must be 'production')
NODE_ENV=production

# Session settings
SESSION_MAX_AGE=2592000
SESSION_UPDATE_AGE=86400

# CORS origins (comma-separated)
CORS_ORIGINS=https://your-app.vercel.app,https://www.your-domain.com

# =============================================================================
# OAUTH PROVIDERS (OPTIONAL)
# =============================================================================
# Google OAuth
GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-client-secret

# GitHub OAuth
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# =============================================================================
# VERCEL DEPLOYMENT CHECKLIST
# =============================================================================
# 1. Go to vercel.com and import your GitHub repository
# 2. In Project Settings > Environment Variables, add:
#    - DATABASE_URL (from Neon dashboard)
#    - BETTER_AUTH_SECRET (generate new random string)
#    - BETTER_AUTH_URL (will be https://your-project.vercel.app)
#    - NEXT_PUBLIC_APP_URL (same as BETTER_AUTH_URL)
# 3. Deploy the project
# 4. After first deployment, update BETTER_AUTH_URL with actual URL
# 5. Redeploy to apply changes
# 6. Run migrations: node scripts/run-migrations.js
# 7. Create admin user: node scripts/create-admin-user.js
# 8. Test admin login at: https://your-app.vercel.app/admin/login

# =============================================================================
# NOTES
# =============================================================================
# - Never commit this file with real values to git
# - Store secrets in Vercel dashboard, not in repository
# - Use different secrets for staging and production
# - Rotate BETTER_AUTH_SECRET periodically (invalidates all sessions)
# - Test locally with: npm run build && npm start
